package com.example.fptacademysystem.controller;import java.util.ArrayList;import java.util.List;import javax.servlet.http.HttpSession;import javax.websocket.server.PathParam;import com.example.fptacademysystem.model.Parent;import com.example.fptacademysystem.model.ParentAccount;import com.example.fptacademysystem.model.ParentResults;import com.example.fptacademysystem.services.ParentAccountService;import com.example.fptacademysystem.services.ParentService;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.ui.Model;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RequestMethod;@Controllerpublic class ParentController {    @Autowired    ParentAccountService accountService;    @Autowired    ParentService parentService;    // Method to Login Page    @RequestMapping(value = "parent/dashboard/login", method = RequestMethod.GET)    public String loginParent(Model model) {        model.addAttribute("parentaccount", new ParentAccount());        return "login/parent-login";    }    // Method Login    @RequestMapping(value = "/dologinparent", method = RequestMethod.POST)    public String doLoginParent(@PathParam("parentroll") String rollnum,                                @PathParam("pass") String pass,                                Model model, HttpSession session) {        ParentAccount account = accountService.checkpaLogin(rollnum, pass);        session.setMaxInactiveInterval(10*60);        if (account != null) {            Parent pa=parentService.findParent(account.getParid().getParid());            session.setAttribute("parentroll", rollnum);            session.setAttribute("paname",pa.getParnm());            session.setAttribute("parentid", pa.getParid());            session.removeAttribute("parerror");            return "redirect:/parent/dashboard/index";        } else {            session.setAttribute("parerror", "Rollnum Or Password Invalid ! Please try again..");            return "redirect:/parent/dashboard/login";        }    }    // Method Logout    @RequestMapping(value = "/logoutparent", method = RequestMethod.GET)    public String logout(HttpSession session) {        session.removeAttribute("parentroll");        session.removeAttribute("paname");        session.removeAttribute("parentid");        return "redirect:/parent/dashboard/login";    }    // Method to dashboard page    @RequestMapping(value = "/parent/dashboard/index", method = RequestMethod.GET)    public String dashboard(Model model, HttpSession session) {        if (session.getAttribute("parentroll") != null){            return "/parents/dashboard/main-index";        } else {            return "login/parent-login";        }    }    //Method to result page    @RequestMapping(value = "/parent/dashboard/result",method = RequestMethod.GET)    public String paResult(Model model,HttpSession session){        if (session.getAttribute("parentroll") != null){            int id = (int) session.getAttribute("parentid");            List<ParentResults> mainResult = new ArrayList<>();            List<ParentResults> reResult = new ArrayList<>();            List<ParentResults> list=parentService.parentResult(id);            for (ParentResults studentResult : list) {                if (studentResult.getCass().equals("current class") || studentResult.getCass().equals("old class")){                    mainResult.add(studentResult);                }else if (studentResult.getCass().equals("learn again")){                    reResult.add(studentResult);                }            }            model.addAttribute("mainResult", mainResult);            model.addAttribute("reResult", reResult);            return "parents/results/main-results";        } else {            return "login/parent-login";        }    }    //Method to timetable page    @RequestMapping(value="/parent/dashboard/timetable",method = RequestMethod.GET)    public String paTimetable(Model model,HttpSession session){        if(session.getAttribute("parentroll")!=null){            return "/parents/timetable/main-timetable";        }else{            return "login/parent-login";        }    }}