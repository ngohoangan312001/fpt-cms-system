package com.example.fptacademysystem.helper;import com.example.fptacademysystem.model.Student;import com.example.fptacademysystem.services.StudentService;import org.apache.poi.ss.usermodel.*;import org.apache.poi.xssf.usermodel.XSSFWorkbook;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Component;import org.springframework.stereotype.Controller;import org.springframework.stereotype.Repository;import org.springframework.web.multipart.MultipartFile;import java.io.ByteArrayInputStream;import java.io.ByteArrayOutputStream;import java.io.IOException;import java.io.InputStream;import java.util.ArrayList;import java.util.Iterator;import java.util.List;public class ExcelHelper {    @Autowired    private static StudentService serviceExel;    public static String TYPE = "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet";    static String[] HEADERs = {"FullName", "DOB", "Gender", "IDCard", "DateOfIssue", "PlaceOfIssue",            "MobilePhone", "Email", "CollegeEmail", "Image", "Major", "Status", "Address"};    static String SHEET = "Student";    public static boolean hasExcelFormat(MultipartFile file) {        if (!TYPE.equals(file.getContentType())) {            return false;        }        return true;    }    public static ByteArrayInputStream tutorialsToExcel(List<Student> students) {        try (Workbook workbook = new XSSFWorkbook(); ByteArrayOutputStream out = new ByteArrayOutputStream();) {            Sheet sheet = workbook.createSheet(SHEET);            // Header            Row headerRow = sheet.createRow(0);            for (int col = 0; col < HEADERs.length; col++) {                Cell cell = headerRow.createCell(col);                cell.setCellValue(HEADERs[col]);            }            int rowIdx = 1;            for (Student student : students) {                Row row = sheet.createRow(rowIdx++);                //row.createCell(0).setCellValue(student.getStuid());                //row.createCell(0).setCellValue(student.getRollnum());                row.createCell(0).setCellValue(student.getFullnm());                row.createCell(1).setCellValue(student.getDob());                row.createCell(2).setCellValue(student.getGender());                row.createCell(3).setCellValue(student.getIdcard());                row.createCell(4).setCellValue(student.getDoi());                row.createCell(5).setCellValue(student.getPoi());                row.createCell(6).setCellValue(student.getMobphone());                row.createCell(7).setCellValue(student.getEmail());                row.createCell(8).setCellValue(student.getCollegeemail());                row.createCell(9).setCellValue(student.getImg());                row.createCell(10).setCellValue(student.getMajor());                row.createCell(11).setCellValue(student.getStustatus());                row.createCell(12).setCellValue(student.getAddress());                // row.createCell(15).setCellValue(student.getCreateat());                // row.createCell(16).setCellValue(student.getUpdateat());                // row.createCell(17).setCellValue(student.getRemoveat());            }            workbook.write(out);            return new ByteArrayInputStream(out.toByteArray());        } catch (IOException e) {            throw new RuntimeException("fail to import data to Excel file: " + e.getMessage());        }    }    public static List<Student> excelToStud(InputStream is) {        try {            Workbook workbook = new XSSFWorkbook(is);            Sheet sheet = workbook.getSheet(SHEET);            Iterator<Row> rows = sheet.iterator();            List<Student> students = new ArrayList<Student>();            int rowNumber = 0;            while (rows.hasNext()) {                Row currentRow = rows.next();                // skip header                if (rowNumber == 0) {                    rowNumber++;                    continue;                }                Iterator<Cell> cellsInRow = currentRow.iterator();                Student student = new Student();                //student.setRollnum("Student" + (service.findNewStudent() + 1)) ;                int roll = serviceExel.findNewStudent() + 1;                student.setRemoveat("No");                int cellIdx = 0;                while (cellsInRow.hasNext()) {                    Cell currentCell = cellsInRow.next();                    student.setRollnum("Student" + roll);                    roll++;                    switch (cellIdx) {                    //   case 0:                    //        student.setStuid(Integer.valueOf((int) currentCell.getNumericCellValue()));                    //   break;                    //   case 0:                    //       student.setRollnum(currentCell.getStringCellValue());                    //   break;                        case 0:                            student.setFullnm(currentCell.getStringCellValue());                            break;                        case 1:                            student.setDob(currentCell.getDateCellValue());                            break;                        case 2:                            student.setGender(currentCell.getStringCellValue());                            break;                        case 3:                            student.setIdcard("" + currentCell.getNumericCellValue());                            break;                        case 4:                            student.setDoi(currentCell.getDateCellValue());                            break;                        case 5:                            student.setPoi(currentCell.getStringCellValue());                            break;                        case 6:                            student.setMobphone(currentCell.getStringCellValue());                            break;                        case 7:                            student.setEmail(currentCell.getStringCellValue());                            break;                        case 8:                            student.setCollegeemail(currentCell.getStringCellValue());                            break;                        case 9:                            student.setImg(currentCell.getStringCellValue());                            break;                        case 10:                            student.setMajor(currentCell.getStringCellValue());                            break;                        case 11:                            student.setStustatus(currentCell.getStringCellValue());                            break;                        case 12:                            student.setAddress(currentCell.getStringCellValue());                            break;//                        case 15://                            student.setCreateat(currentCell.getDateCellValue());//                            break;//                        case 16://                            student.setUpdateat(currentCell.getDateCellValue());//                            break;//                        case 16://                            student.setRemoveat(currentCell.getStringCellValue());//                            break;                        default:                            break;                    }                    cellIdx++;                }                students.add(student);            }            workbook.close();            return students;        } catch (IOException e) {            throw new RuntimeException("fail to parse Excel file: " + e.getMessage());        }    }}