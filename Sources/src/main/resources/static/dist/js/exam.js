const ExamCode = document.querySelector('#examcodelogin');const ExamDay = document.querySelector('#examday');const Course = document.querySelector('#Courses');const StudentGroup = document.querySelector('#stugroid');const Semester = document.querySelector('#Semester');const Subject = document.querySelector('#subjdetailsid');const ExamType = document.querySelector('#examtype');const ExamTime = document.querySelector('#examtime');const Bout = document.querySelector('#bout');const Room = document.querySelector('#roomid');const editExamCode = document.querySelector('#editexamcodelogin');const editExamDay = document.querySelector('#editexamday');const editExamTime = document.querySelector('#editexamtime');const editBout = document.querySelector('#editbout');const editRoom = document.querySelector('#editroomid');const form = document.querySelector('#formCreate');const editform=document.querySelector("#EditExam");const required = value => value === '' ? false : true;const between = (length, min, max) => length < min || length > max ? false : true;const examCodeValid = (name) => {    const regex = /^([a-zA-Z0-9]+)$/;    return regex.test(name);};const showError = (input, message) => {    const formField = input.parentElement;    input.classList.remove('is-valid');    input.classList.add('is-invalid');    input.focus();    formField.classList.remove('success');    formField.classList.add('error');    // show message error with wrong input    const error = formField.querySelector('small');    error.classList.add('text-danger');    error.textContent = message;};const showSuccess = (input) => {    const formField = input.parentElement;    input.classList.remove('is-invalid');    input.classList.add('is-valid');    formField.classList.remove('error');    formField.classList.add('success');    // hide message error    const error = formField.querySelector('small');    error.textContent = ''; // assign null value to hide error message};// Validate Exam Codeconst checkExamCode = (exam_code) => {    let valid = false;    const examcode = exam_code.value;    if (!required(examcode)) {        showError(exam_code, 'Exam code cannot be blank !');    }else if(!between(examcode,0,10)) {        showError(exam_code, 'Exam code can only contain 10 character !');    }else if(!examCodeValid(examcode)){        showError(exam_code, 'Exam code can not contain special character !');    }else {        showSuccess(exam_code);        valid = true;    }    return valid;}// Validate Exam dayconst checkExamDay = (exam_day,enddate) => {    let valid = false;    const examday = new Date(exam_day.value);    var examdate = Date.parse($("#"+enddate).text());    if (!required(examday)) {        showError(exam_day, 'Please choose exam day !');    }else if(examday <= examdate){        showError(exam_day, 'Exam must begin after subject end date !');    }else {        showSuccess(exam_day);        valid = true;    }    return valid;}// Validate courseconst checkCourse = (exam_course) => {    let valid = false;    const examcourse = exam_course.value;    if (!required(examcourse)) {        showError(exam_course, 'Please select a course !');    }else {        showSuccess(exam_course);        valid = true;    }    return valid;}// Validate Student Groupconst checkStudentGroup = (student_group) => {    let valid = false;    const studentgroup = student_group.value;    if (!required(studentgroup)) {        showError(student_group, 'Please select Student group !');    }else {        showSuccess(student_group);        valid = true;    }    return valid;}// Validate semesterconst checkSemester = (exam_semester) => {    let valid = false;    const semester = exam_semester.value;    if (!required(semester)) {        showError(exam_semester, 'Please select Semester !');    }else {        showSuccess(exam_semester);        valid = true;    }    return valid;}// Validate subjectconst checkSubject = (exam_subject) => {    let valid = false;    const subject = exam_subject.value;    if (!required(subject)) {        showError(exam_subject, 'Please select Subject !');    }else {        showSuccess(exam_subject);        valid = true;    }    return valid;}// Validate exam typeconst checkExamType = (exam_type) => {    let valid = false;    const examtype = exam_type.value;    if (!required(examtype)) {        showError(exam_type, 'Please select Exam type !');    }else {        showSuccess(exam_type);        valid = true;    }    return valid;}// Validate exam timeconst checkExamTime = (exam_time) => {    let valid = false;    const examtime = exam_time.value;    if (!required(examtime)) {        showError(exam_time, 'Please select Exam time !');    }else {        showSuccess(exam_time);        valid = true;    }    return valid;}// Validate boutconst checkBout = (exam_bout) => {    let valid = false;    const exambout = exam_bout.value;    if (!required(exambout)) {        showError(exam_bout, 'Please select Exam Bout !');    }else {        showSuccess(exam_bout);        valid = true;    }    return valid;}// Validate Roomconst checkRoom = (exam_room) => {    let valid = false;    const room = exam_room.value;    if (!required(room)) {        showError(exam_room, 'Please select Exam Room !');    }else {        showSuccess(exam_room);        valid = true;    }    return valid;}//-------------------------// Validate create form//Trigger validation checkform.addEventListener('input', function (e) {    switch (e.target.id) {        case 'examcodelogin':            checkExamCode(ExamCode);            break;        case 'examday':            checkExamDay(ExamDay,"subjenddate");            break;        case 'Courses':            checkCourse(Course);            break;        case 'stugroid':            checkStudentGroup(StudentGroup);            break;        case 'Semester':            checkSemester(Semester);            break;        case 'subjdetailsid':            checkSubject(Subject);            break;        case 'examtype':            checkExamType(ExamType);            checkBout(Bout);            break;        case 'examtime':            checkExamTime(ExamTime);            break;        case 'roomid':            checkRoom(Room);            break;    }});editform.addEventListener('input', function (e) {    switch (e.target.id) {        case 'editexamcodelogin':            checkExamCode(editExamCode);            break;        case 'editexamday':            checkExamDay(editExamDay,"editsubjenddate");            break;        case 'editexamtime':            checkExamTime(editExamTime);            break;        case 'editbout':            checkBout(editBout);            break;        case 'editroomid':            checkRoom(editRoom);            break;    }});//-------------------------// End validate//-------------------------//-------------------------//Function for dropdown$(document).ready(function(){    //show all course    getAllCourses("Courses");    getAllCourses("editCourses");    checkExamComplete();});// show info for Create Form$("#Courses").on("change",function(){    //remove and show new student group    getStudentGroupByCourse($(this).val(),"stugroid");    //remove semester    $("#Semester").html('<option value="" disabled selected>select semester</option>');    //remove subject    $("#subjdetailsid").html('<option value="" disabled selected>select subject</option>');    //remove exam type    $("#examtype").html('<option value="" disabled selected>select exam type</option>');    //remove bout    $("#bout").val('Auto Generated');    //remove subject end date    $("#subjenddate").text('');});$("#stugroid").on("change",function(){    //remove and show new Semester    getAllSemester("Semester");    //remove subject    $("#subjdetailsid").html('<option value="" disabled selected>select subject</option>');    //remove exam type    $("#examtype").html('<option value="" disabled selected>select exam type</option>');    //remove bout    $("#bout").val('Auto Generated');    //remove subject end date    $("#subjenddate").text('');});$("#Semester").on("change",function(){    //remove and show new subject    getSubjectDetail();    //remove exam type    $("#examtype").html('<option value="" disabled selected>select exam type</option>');    //remove bout    $("#bout").val('Auto Generated');    //remove subject end date    $("#subjenddate").text('');});$("#subjdetailsid").on("change",function(){    //remove and show new examtype    getExamType();    //show subject end date    getSubjEndDate($('#stugroid').val(),$('#subjdetailsid').val(),"subjenddate");    //remove bout    $("#bout").val('Auto Generated');});$("#examtype").on("change", function () {    //show new List    getBout();});//end show info for Create Form// -------------------------------// -------------------------------// -------------------------------// show info for Edit Form$("#editCourses").on("change",function(){    //remove and show new student group    getStudentGroupByCourse($(this).val(),"editstugroid");    //remove semester    $("#editSemester").html('');    //remove subject    $("#editsubjdetailsid").html('');});$("#editstugroid").on("change",function(){    //remove and show new Semester    getAllSemester("editSemester");    //remove subject    $("#editsubjdetailsid").html('');});$("#editSemester").on("change",function(){    //remove and show new subject    getSubjectDetail();});//end show info for Edit Form// -------------------------------// -------------------------------// -------------------------------//get All coursefunction getAllCourses(showId) {    $.ajax({        url: '/api/admin/exam/findAllCourse',        type: "GET",        datatype: "JSON",        data: '',        success: function (result) {            var option='<option value="" disabled selected>select course</option>';            for (var i in result){                option+='<option class="courseOption" value="'+result[i].courid+'">'+result[i].cournm+'</option>';            }            $("#"+showId).html(option);        }    });}//get All Semesterfunction getAllSemester(showId) {    $.ajax({        url: '/api/admin/exam/findAllSemester',        type: "GET",        datatype: "JSON",        data: '',        success: function (result) {            var option='<option value="" disabled selected>select Semester</option>';            for (var i in result){                option+='<option class="courseOption" value="'+(result[i].semid-1)+'">'+result[i].semnm+'</option>';            }            $("#"+showId).html(option);        }    });}//get Student Group by Course idfunction getStudentGroupByCourse(courseId,showId){    $.ajax({        url: '/api/admin/exam/findStudentgroup/'+courseId,        type: "GET",        datatype: "JSON",        data: '',        success: function (result) {            var option='<option value="" disabled selected>Select Student Group</option>';            for (var i in result){                option+='<option class="stuGroupOption" value="'+result[i].stugroid+'">'+result[i].stugronm+'</option>';            }            $("#"+showId).html(option);        }    });}//get Student Group by Course id for createfunction getSubjectDetail(){    $.ajax({        url: '/api/admin/exam/findSubjectDetails',        type: "GET",        datatype: "JSON",        data: {            stugroid : $('#stugroid').val(),            semid : $('#Semester').val()        },        success: function (result) {            var option='<option value="" disabled selected>Select Subject</option>';            for (var i in result){                option+='<option class="subjectOption" value="'+result[i].subjdetailsid +'">'+result[i].subjnm+'</option>';            }            $("#subjdetailsid").html(option);        }    });}//get Exam typefunction getExamType(){    $.ajax({        url: '/api/admin/exam/checkExamType/'+$('#stugroid').val()+'/'+$('#subjdetailsid').val(),        type: "GET",        datatype: "JSON",        success: function (result) {            var option='<option value="" disabled selected>Select Exam Type</option>';            if (result[0] < 2){                option+='<option class="examTypeOption" value="ASM">ASM</option>';            }            if (result[1] < 2){                option+='<option class="examTypeOption" value="OBJ">OBJ</option>';            }            $("#examtype").html(option);        }    });}//get Boutfunction getBout(){    $.ajax({        url: '/api/admin/exam/checkExamBout/'+$('#stugroid').val()+'/'+$('#subjdetailsid').val()+'/'+$('#examtype').val(),        type: "GET",        datatype: "JSON",        success: function (result) {            var option='<option value="" disabled selected>Select Bout</option>';            if (result == 0){                $("#bout").val(1);            }else if (result == 1){                $("#bout").val(2);            }else if (result == 2){                $("#bout").val('No bout available');            }        }    });}//get subject end datefunction getSubjEndDate(stugroid,subjdetailsid,holder){    $.ajax({        url: '/api/admin/exam/findSubjectEndDay/'+stugroid+'/'+subjdetailsid,        type: "GET",        datatype: "JSON",        success: function (result) {            $("#"+holder).text("Subject End date: "+result);        }    });}//get Student Group by Course id for updatefunction getEditSubjectDetail(){    $.ajax( {        url: '/api/admin/exam/findSubjectDetails',        type: "GET",        datatype: "JSON",        data: {            semid : $('#editSemester').val(),            courid : $('#editCourses').val(),        },        success: function (result) {            var option='<option value="" disabled selected>---Select Subject---</option>';            for (var i in result){                option+='<option class="subjectOption" value="'+result[i].subjdetailsid +'">'+result[i].subjnm+'</option>';            }            $("#editsubjdetailsid").html(option);        }    });}// -------------------------------// End get All course// -------------------------------// -------------------------------// -------------------------------//submit form createform.addEventListener('submit', function(e){    e.preventDefault();    var data = {        examcodelogin : $('#examcodelogin').val(),        examday : $('#examday').val(),        examtype : $('#examtype').val(),        examtime : $('#examtime').val(),        bout : $('#bout').val(),        roomid : $('#roomid').val(),        stugroid : $('#stugroid').val(),        subjdetailsid : $('#subjdetailsid').val()    };    let isexamcodevalid=checkExamCode(ExamCode),        isexamdayvalid=checkExamDay(ExamDay,"subjenddate"),        isexamcoursevalid=checkCourse(Course),        isstudentgroupvalid=checkStudentGroup(StudentGroup),        issemestervalid=checkSemester(Semester),        issubjectvalid=checkSubject(Subject),        isexamtypevalid=checkExamType(ExamType),        isexamtimevalid=checkExamTime(ExamTime),        isboutvalid=checkBout(Bout),        isroomvalid=checkRoom(Room),        isformvalid=isexamcodevalid && isexamdayvalid && isexamcoursevalid && isstudentgroupvalid && issemestervalid && issubjectvalid && isexamtypevalid && isexamtimevalid && isboutvalid && isroomvalid;    if(isformvalid){        console.log(data);        $.ajax({            type: 'POST',            url: '/api/admin/exam/create',            data: JSON.stringify(data),            dataType: 'json',            contentType:'application/json',            success: function(result){                Swal.fire({                    position: 'center',                    icon: 'success',                    title: 'Create Exam Success',                    showConfirmButton: false,                    timer: 1000                });                setTimeout("location.reload(true);", 1000);            },            error: function () {                Swal.fire({                    position: 'center',                    icon: 'error',                    title: 'Error',                    showConfirmButton: false,                    timer: 1000                });            }        });    }});// -------------------------------// get Exam infofunction getExamInfo(elem){    var id = elem.querySelector('input').value;    var Subjnm = elem.querySelector('#editsubjectnm').innerHTML;    var Stugronm = elem.querySelector('#editstugronm').innerHTML;    $.ajax({        type: 'GET',        url: '/api/admin/exam/findExamById/' + id,        success: function (result) {            $('#EditExam #editexamid').val(result.examid);            $('#EditExam #editsubjectnm').val(Subjnm);            $('#EditExam #editstugronm').val(Stugronm);            $('#EditExam #editexamcodelogin').val(result.examcodelogin);            $('#EditExam #editexamday').val(result.examday);            $('#EditExam #editexamtype').val(result.examtype);            $('#EditExam #editexamtime').val(result.examtime);            $('#EditExam #editbout').val(result.bout);            $('#EditExam #editroomid').val(result.roomid);            $('#EditExam #editstugroup').val(result.stugroid);            $('#EditExam #editsubjdetailsid').val(result.subjdetailsid);            getSubjEndDate(result.stugroid,result.subjdetailsid,"editsubjenddate")        },        error: function () {            Swal.fire({                position: 'center',                icon: 'error',                title: 'Error',                showConfirmButton: false,                timer: 1000            });        }    });}// -------------------------------// submit form editeditform.addEventListener("submit",function(e){    e.preventDefault();    var data = {        examid : $('#editexamid').val(),        examcodelogin : $('#editexamcodelogin').val(),        examday : $('#editexamday').val(),        examtype: $('#editexamtype').val(),        examtime: $('#editexamtime').val(),        bout : $('#editbout').val(),        roomid : $('#editroomid').val(),        stugroid: $('#editstugroup').val(),        subjdetailsid: $('#editsubjdetailsid').val()    };    let isexamcodevalid=checkExamCode(editExamCode),        isexamdayvalid=checkExamDay(editExamDay,"editsubjenddate"),        isexamtimevalid=checkExamTime(editExamTime),        isboutvalid=checkBout(editBout),        isroomvalid=checkRoom(editRoom),        isformvalid=isexamcodevalid && isexamdayvalid && isexamtimevalid && isboutvalid && isroomvalid;    if(isformvalid){        console.log(data);        $.ajax({            type: 'POST',            url: '/api/admin/exam/edit',            data: JSON.stringify(data),            dataType: 'json',            contentType:'application/json',            success: function(result){                Swal.fire({                    position: 'center',                    icon: 'success',                    title: 'Create Exam Success',                    showConfirmButton: false,                    timer: 1000                });                setTimeout("location.reload(true);", 1000);            },            error: function () {                Swal.fire({                    position: 'center',                    icon: 'error',                    title: 'Error',                    showConfirmButton: false,                    timer: 1000                });            }        });    }});// -------------------------------// delete Examfunction deleteExam(elem) {    var id = elem.querySelector('input').value;    Swal.fire({        title: 'Do you want to delete ?',        showDenyButton: true,        confirmButtonText: `Yes`,        denyButtonText: `No`,    }).then((result) => {        /* Read more about isConfirmed, isDenied below */        if (result.isConfirmed) {            $.ajax({                type: 'POST',                url: '/api/admin/exam/deleteExam/' + id,                success: function () {                    Swal.fire('Saved!', '', 'success');                    setTimeout("location.reload(true);", 1000);                }            })        } else if (result.isDenied) {            Swal.fire('Changes are not saved', '', 'info');        }    })}// -------------------------------// remove edit and delete button Examfunction checkExamComplete() {    $("#tabledb1 tbody tr").each(function (i,el) {        var examid = $(el).find('.examid').text();        $.ajax({            type: 'GET',            url: '/api/admin/exam/checkExamComplete/' + examid,            success: function (result) {                if (result == true) {                    $(el).find('.editbutton').prop('disabled',true);                    $(el).find('.deletebutton').prop('disabled',true);                }else{                    $(el).find('.editbutton').prop('disabled',false);                    $(el).find('.deletebutton').prop('disabled',false);                }            }        });    });}