const File = document.querySelector("#fileSubject");const form = document.querySelector("#subjectimportform");const required = value => value === '' ? false : true;const showError = (input, message) => {    const formField = input.parentElement;    input.classList.remove('is-valid');    input.classList.add('is-invalid');    input.focus();    formField.classList.remove('success');    formField.classList.add('error');    // show message error with wrong input    const error = formField.querySelector('small');    error.classList.add('text-danger');    error.textContent = message;};const showSuccess = (input) => {    const formField = input.parentElement;    input.classList.remove('is-invalid');    input.classList.add('is-valid');    formField.classList.remove('error');    formField.classList.add('success');    // hide message error    const error = formField.querySelector('small');    error.textContent = ''; // assign null value to hide error message};// Validate File Importconst checkFileImport = (file_subject) => {    let valid = false;    const fileSub = file_subject.value;    var allowedExtensions = /(\.xlsx)$/i;    if (!allowedExtensions.exec(fileSub) && !required(fileSub)) {        valid = true;    } else if (!allowedExtensions.exec(fileSub)) {        file_subject.value = '';        showError(file_subject, 'File must be a .xlsx');    } else if (file_subject.files[0].size > (1024 * 1000)) {        showError(file_subject, 'File too large. Size cannot greater 1MB !');    } else {        showSuccess(file_subject);        valid = true;    }    return valid;};form.addEventListener('submit', function (e) {    e.preventDefault()    let isFileValid = checkFileImport(File);    let isFormValid = isFileValid;    if (isFormValid){        var formdata = new FormData(this);        $.ajax({            url: "/api/admin/importsubject",            type: 'POST',            enctype: 'multipart/form-data',            dataType: 'json',            data: formdata,            cache: false,            contentType: false,            processData: false,            success: function (result) {                if (result.title === 'error') {                    Swal.fire({                        postition: 'top-end',                        icon: result.title,                        title: 'Import Successful',                        showConfirmButton: true                    });                }                else{                    Swal.fire({                        postition: 'top-end',                        icon: result.title,                        title: result.message,                        showConfirmButton: false,                        timer: 1500                    });                    setTimeout("location.reload(true);", 1500);                }            },            error: function () {                Swal.fire({                    position: 'center',                    icon: 'error',                    title: 'Please choose a file to import',                    showConfirmButton: false,                    timer: 1000                });                //setTimeout("location.reload(true);", 1000);            }        });    }});